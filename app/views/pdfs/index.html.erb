
 <table class="table table-hover table-bordered results">
   <thead>
   <tr>
     <th>#</th>
     <th>PDF</th>
     <th>Filename</th>
     <th>Edit</th>
     <th>Delete</th>
   </tr>
   <tr class="warning no-result">
     <td colspan="4"><i class="fa fa-warning"></i> No result</td>
   </tr>
   </thead>
   <tbody>

   <% @pdfs.all.each do |pdf| %>

       <tr>
         <th scope="row"><%= pdf.id %></th>
         <td><%= link_to pdf.title, pdf.file.url(:original, false), target: :_blank  %></td>
         <td><%= pdf.file_file_name %></td>
         <td>
           <%= link_to 'Edit', edit_pdf_path(pdf), class: 'btn btn-primary' %>
         </td>
         <td>
           <%= link_to 'Remove', pdf_path(pdf), class: 'btn btn-danger', method: :delete, data: {confirm: 'Are you sure?'} %>
         </td>
       </tr>
       <tr>
         <td>
           <button type="button" class="btn btn-secondary clipboard-btn" data-clipboard-action="copy" data-clipboard-target="#<%= pdf.url %>" >Copy URL</button>
         </td>
         <td colspan="4">
            <span id="<%= pdf.url %>"><%= (link_to pdf.title, getpdf_path(pdf.url), target: :_blank).chomp %></span>
         </td>
       </tr>
   <% end %>

   </tbody>
 </table>



 <script>
     $(document).ready(function(){

         $(".search").keyup(function () {
             var searchTerm = $(".search").val();
             var listItem = $('.results tbody').children('tr');
             var searchSplit = searchTerm.replace(/ /g, "'):containsi('");

             $.extend($.expr[':'], {'containsi': function(elem, i, match, array){
                 return (elem.textContent || elem.innerText || '').toLowerCase().indexOf((match[3] || "").toLowerCase()) >= 0;
             }
             });

             $(".results tbody tr").not(":containsi('" + searchSplit + "')").each(function(e){
                 $(this).attr('visible','false');
             });

             $(".results tbody tr:containsi('" + searchSplit + "')").each(function(e){
                 $(this).attr('visible','true');
             });

             var jobCount = $('.results tbody tr[visible="true"]').length;
             $('.counter').text(jobCount + ' item');

             if(jobCount == '0') {$('.no-result').show();}
             else {$('.no-result').hide();}
         });

// Tooltip

         $('.clipboard-btn').tooltip({
             trigger: 'click',
             placement: 'bottom'
         });

         function setTooltip(btn, message) {
             $(btn).tooltip('hide')
                 .attr('data-original-title', message)
                 .tooltip('show');
         }

         function hideTooltip(btn) {
             setTimeout(function() {
                 $(btn).tooltip('hide');
             }, 1000);
         }

// Clipboard

         var clipboard = new Clipboard('.clipboard-btn');

         clipboard.on('success', function(e) {
             setTooltip(e.trigger, 'Copied!');
             hideTooltip(e.trigger);
         });

         clipboard.on('error', function(e) {
             setTooltip(e.trigger, 'Failed!');
             hideTooltip(e.trigger);
         });

     });
 </script>